/*
 * This file is generated by jOOQ.
 */
package com.yc_pay.model.dbModels.generated.tables.records;


import com.yc_pay.model.dbModels.generated.tables.Transaction;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record10;
import org.jooq.Record2;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionRecord extends UpdatableRecordImpl<TransactionRecord> implements Record10<String, String, String, String, String, BigDecimal, String, LocalDateTime, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.transaction.transactionid</code>.
     */
    public void setTransactionid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.transaction.transactionid</code>.
     */
    public String getTransactionid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.transaction.merchantid</code>.
     */
    public void setMerchantid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.transaction.merchantid</code>.
     */
    public String getMerchantid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.transaction.walletfrom</code>.
     */
    public void setWalletfrom(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.transaction.walletfrom</code>.
     */
    public String getWalletfrom() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.transaction.walletto</code>.
     */
    public void setWalletto(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.transaction.walletto</code>.
     */
    public String getWalletto() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.transaction.currency</code>.
     */
    public void setCurrency(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.transaction.currency</code>.
     */
    public String getCurrency() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.transaction.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.transaction.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>public.transaction.network</code>.
     */
    public void setNetwork(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.transaction.network</code>.
     */
    public String getNetwork() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.transaction.createdate</code>.
     */
    public void setCreatedate(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.transaction.createdate</code>.
     */
    public LocalDateTime getCreatedate() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>public.transaction.category</code>.
     */
    public void setCategory(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.transaction.category</code>.
     */
    public String getCategory() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.transaction.status</code>.
     */
    public void setStatus(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.transaction.status</code>.
     */
    public String getStatus() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<String, String, String, String, String, BigDecimal, String, LocalDateTime, String, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<String, String, String, String, String, BigDecimal, String, LocalDateTime, String, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Transaction.TRANSACTION.TRANSACTIONID;
    }

    @Override
    public Field<String> field2() {
        return Transaction.TRANSACTION.MERCHANTID;
    }

    @Override
    public Field<String> field3() {
        return Transaction.TRANSACTION.WALLETFROM;
    }

    @Override
    public Field<String> field4() {
        return Transaction.TRANSACTION.WALLETTO;
    }

    @Override
    public Field<String> field5() {
        return Transaction.TRANSACTION.CURRENCY;
    }

    @Override
    public Field<BigDecimal> field6() {
        return Transaction.TRANSACTION.AMOUNT;
    }

    @Override
    public Field<String> field7() {
        return Transaction.TRANSACTION.NETWORK;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Transaction.TRANSACTION.CREATEDATE;
    }

    @Override
    public Field<String> field9() {
        return Transaction.TRANSACTION.CATEGORY;
    }

    @Override
    public Field<String> field10() {
        return Transaction.TRANSACTION.STATUS;
    }

    @Override
    public String component1() {
        return getTransactionid();
    }

    @Override
    public String component2() {
        return getMerchantid();
    }

    @Override
    public String component3() {
        return getWalletfrom();
    }

    @Override
    public String component4() {
        return getWalletto();
    }

    @Override
    public String component5() {
        return getCurrency();
    }

    @Override
    public BigDecimal component6() {
        return getAmount();
    }

    @Override
    public String component7() {
        return getNetwork();
    }

    @Override
    public LocalDateTime component8() {
        return getCreatedate();
    }

    @Override
    public String component9() {
        return getCategory();
    }

    @Override
    public String component10() {
        return getStatus();
    }

    @Override
    public String value1() {
        return getTransactionid();
    }

    @Override
    public String value2() {
        return getMerchantid();
    }

    @Override
    public String value3() {
        return getWalletfrom();
    }

    @Override
    public String value4() {
        return getWalletto();
    }

    @Override
    public String value5() {
        return getCurrency();
    }

    @Override
    public BigDecimal value6() {
        return getAmount();
    }

    @Override
    public String value7() {
        return getNetwork();
    }

    @Override
    public LocalDateTime value8() {
        return getCreatedate();
    }

    @Override
    public String value9() {
        return getCategory();
    }

    @Override
    public String value10() {
        return getStatus();
    }

    @Override
    public TransactionRecord value1(String value) {
        setTransactionid(value);
        return this;
    }

    @Override
    public TransactionRecord value2(String value) {
        setMerchantid(value);
        return this;
    }

    @Override
    public TransactionRecord value3(String value) {
        setWalletfrom(value);
        return this;
    }

    @Override
    public TransactionRecord value4(String value) {
        setWalletto(value);
        return this;
    }

    @Override
    public TransactionRecord value5(String value) {
        setCurrency(value);
        return this;
    }

    @Override
    public TransactionRecord value6(BigDecimal value) {
        setAmount(value);
        return this;
    }

    @Override
    public TransactionRecord value7(String value) {
        setNetwork(value);
        return this;
    }

    @Override
    public TransactionRecord value8(LocalDateTime value) {
        setCreatedate(value);
        return this;
    }

    @Override
    public TransactionRecord value9(String value) {
        setCategory(value);
        return this;
    }

    @Override
    public TransactionRecord value10(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public TransactionRecord values(String value1, String value2, String value3, String value4, String value5, BigDecimal value6, String value7, LocalDateTime value8, String value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionRecord
     */
    public TransactionRecord() {
        super(Transaction.TRANSACTION);
    }

    /**
     * Create a detached, initialised TransactionRecord
     */
    public TransactionRecord(String transactionid, String merchantid, String walletfrom, String walletto, String currency, BigDecimal amount, String network, LocalDateTime createdate, String category, String status) {
        super(Transaction.TRANSACTION);

        setTransactionid(transactionid);
        setMerchantid(merchantid);
        setWalletfrom(walletfrom);
        setWalletto(walletto);
        setCurrency(currency);
        setAmount(amount);
        setNetwork(network);
        setCreatedate(createdate);
        setCategory(category);
        setStatus(status);
        resetChangedOnNotNull();
    }
}
